generator client {
model User {
id String @id @default(cuid())
email String @unique
name String?
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
memberships Membership[]
}


model Membership {
id String @id @default(cuid())
org Org @relation(fields: [orgId], references: [id])
orgId String
user User @relation(fields: [userId], references: [id])
userId String
role Role
createdAt DateTime @default(now())
@@unique([orgId, userId])
}


model Job {
id String @id @default(cuid())
org Org @relation(fields: [orgId], references: [id])
orgId String
title String
status JobStatus @default(DRAFT)
workflowVersion String @default("1.0")
budgetCents Int @default(0)
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
scheduledAt     DateTime?
}


model Document {
id String @id @default(cuid())
orgId String
jobId String?
url String
kind String
createdAt DateTime @default(now())
}


model FormSubmission {
id String @id @default(cuid())
orgId String
jobId String?
formKey String
data Json
pdfUrl String?
createdAt DateTime @default(now())
}


model DomainEvent {
id String @id @default(cuid())
orgId String
name String
entityType String
entityId String
payload Json
occurredAt DateTime @default(now())
}


model AuditLog {
id String @id @default(cuid())
orgId String
userId String?
action String
entityType String
entityId String
diff Json?
occurredAt DateTime @default(now())
}


model Notification {
id String @id @default(cuid())
orgId String
channel String
to String
templateKey String
payload Json
sentAt DateTime?
}


model IntegrationOutbox {
id String @id @default(cuid())
orgId String
topic String
payload Json
status OutboxStatus @default(PENDING)
attempts Int @default(0)
lastError String?
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
@@index([status, createdAt])
}


model IdempotencyKey {
key String @id
orgId String
userId String?
requestHash String
response Json?
createdAt DateTime @default(now())
}